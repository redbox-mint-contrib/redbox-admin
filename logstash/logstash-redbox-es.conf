input {
  file {
    type => "redbox-main"
    path => "/var/www/redbox-admin/mock-logs/samples/logs/redbox/main.log"
    start_position => beginning
    sincedb_path => "/home/chris/bin/logstash/since/rbmain_since"
    add_field => { logfile => "redbox_main" }
  }
}

input {
  file {
    type => "redbox-trans"
    path => "/var/www/redbox-admin/mock-logs/samples/logs/redbox/transactionManager.log"
    start_position => beginning
    sincedb_path => "/home/chris/bin/logstash/since/rbtrans_since"
    add_field => { logfile => "redbox_trans" }
  }
}

input {
  file {
    type => "mint-main"
    path => "/var/www/redbox-admin/mock-logs/doctored/doctoredmint2.log"
    start_position => beginning
    sincedb_path => "/home/chris/bin/logstash/since/mintmain_since"
    add_field => { logfile => "mint-main" }
  }
}

filter {
    if [type] == "mint-main" {

        grok {
           match => ["message", "For harvestRequestId\:\s(?<hrid_start>\S{8}\-\S{4}\-\S{4}\-\S{4}\-\S{8,12})\sextracted\srulesConfig\svalue\:\s(?<harvest_data_type>[\S\_]+)$"]
           tag_on_failure => ["not_a_harvest_start"]
        }

        # Get the JSON string out of the message if there is one and into it's own field
        grok {
            match => ["message",  "(?<harvester>\{.*\}$)"]
            tag_on_failure => ["no_json_encountered"]
        }

        # Get rid fo the backslashes
        mutate {
            gsub => ["harvester", "[\\]", ""]
        }

        # Convert JSON into fields
        json {
            source => "harvester"
        }
    }

    # Keep Java stack traces in the same event
    multiline {
            pattern => "^\d{4}\-\d{2}\-\d{2}"
            negate => true
            what => "previous"
    }

    # Put the timestamp into its own field
    grok {
        match => ["message", "(?<logts>^\d{4}\-\d{2}\-\d{2}\s\d{2}\:\d{2}\:\d{2})"]
    }
    
    # Put the event type into its own field (ERROR, WARN, INFO, etc)
    grok {
        match => ["message", "(?<evt>\s([A-Z]{4,6})\s)"]
    }

    # Strip off leading and trailing spaces from the event type
    mutate {
        strip => ["evt"]
    }

}

output {
  elasticsearch {
      host => localhost
  }
  stdout { codec => rubydebug }
}

# For debugging
#output {
#    stdout { codec => rubydebug }
#}
