input {
  file {
    type => "redbox-main"
    path => "/var/www/redbox-admin/mock-logs/samples/logs/redbox/main.log"
    start_position => beginning
    sincedb_path => "/home/chris/bin/logstash/since/apache_since"
    add_field => { logfile => "redbox_main" }
  }
}

input {
  file {
    type => "redbox-trans"
    path => "/var/www/redbox-admin/mock-logs/samples/logs/redbox/transactionManager.log"
    start_position => beginning
    sincedb_path => "/home/chris/bin/logstash/since/apache_since"
    add_field => { logfile => "redbox_trans" }
  }
}


filter {
    # Keep Java stack traces in the same event
    multiline {
            pattern => "^\d{4}\-\d{2}\-\d{2}"
            negate => true
            what => "previous"
    }

    # Put the timestamp into its own field
    grok {
        match => ["message", "(?<logts>^\d{4}\-\d{2}\-\d{2}\s\d{2}\:\d{2}\:\d{2})"]
    }
    
    # Put the event type into its own field (ERROR, WARN, INFO, etc)
    grok {
        match => ["message", "(?<evt>\s([A-Z]{4,6})\s)"]
    }

    # Strip off leading and trailing spaces from the event type
    mutate {
        strip => ["evt"]
    }

}

output {
  elasticsearch {
      host => localhost
  }
  stdout { codec => rubydebug }
}

# For debugging
#output {
#    stdout { codec => rubydebug }
#}
